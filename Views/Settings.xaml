<UserControl x:Class="Pete.Views.Settings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"             
             xmlns:res="clr-namespace:Pete"
             xmlns:services="clr-namespace:Pete.Services.Interfaces"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        
        <Grid Margin="15" Grid.Row="3" Grid.ColumnSpan="2">
            <Grid.RenderTransform>
                <TranslateTransform Y="160"/>
            </Grid.RenderTransform>
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TranslateTransform.Y)" To="0" Duration="0:0:0.25" DecelerationRatio="0.2" BeginTime="0:0:0.35"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Style="{DynamicResource Border.Card}" Grid.RowSpan="4" Grid.ColumnSpan="2" Margin="-10"/>
            <TextBlock Style="{DynamicResource TextBlock.Main}" Text="device info" TextAlignment="Left" FontSize="16"/>
            <res:InfoCircle HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="1" Margin="5,-5,-5,0" Text="please store the device information in a secure location, as it is needed in case you lose your 2fa device and need to switch to a different one"/>

            <Border Style="{DynamicResource Border.Divider.Horizontal}" Grid.Row="1" Margin="-5,2,-5,5" Grid.ColumnSpan="2"/>
            <TextBlock Style="{DynamicResource TextBlock.Main}" FontSize="12" Grid.Row="2" TextAlignment="Left" Grid.ColumnSpan="2">
                <Run Text="id:"/>
                <Hyperlink Style="{DynamicResource Link}" ToolTip="device id, click to copy to clipboard" Command="{x:Static res:GlobalCommands.CopyTextToClipboardCommand}" CommandParameter="{Binding DeviceID}"><Run Text="{Binding DeviceID, Mode=OneWay}"/></Hyperlink>
            </TextBlock>
            <TextBlock Style="{DynamicResource TextBlock.Main}" FontSize="12" Grid.Row="3" TextAlignment="Left" Grid.ColumnSpan="2">
                <Run Text="hash:"/>
                <Hyperlink Style="{DynamicResource Link}" ToolTip="device hash, click to copy to clipboard" Command="{x:Static res:GlobalCommands.CopyTextToClipboardCommand}" CommandParameter="{Binding DeviceHash}"><Run Text="{Binding DeviceHash, Mode=OneWay}"/></Hyperlink>
            </TextBlock>
        </Grid>
        <Grid Margin="15">
            <Grid.RenderTransform>
                <TranslateTransform X="-320"/>
            </Grid.RenderTransform>
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.25" DecelerationRatio="0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Style="{DynamicResource Border.Card}" Grid.RowSpan="4" Grid.ColumnSpan="3" Margin="-10"/>
            <TextBlock Style="{DynamicResource TextBlock.Main}" Grid.ColumnSpan="2" Text="about" TextAlignment="Left" FontSize="16"/>

            <Border Style="{DynamicResource Border.Divider.Horizontal}" Grid.Row="1" Margin="-5,2,-5,5" Grid.ColumnSpan="3"/>

            <TextBlock Style="{DynamicResource TextBlock.Main}" Grid.Row="2" Grid.ColumnSpan="3" MaxWidth="250">
                this program was created by
                <Hyperlink Style="{DynamicResource Link}" ToolTip="{x:Static res:App.GITHUB_LINK}" Command="{x:Static res:GlobalCommands.OpenUrlCommand}" CommandParameter="{x:Static res:App.GITHUB_LINK}">Nightowl</Hyperlink>
                as a personal project, they have drank
                <Run Text="{x:Static res:App.ENERGY_DRINKS}" ToolTip="wow that's a lot!" FontWeight="Bold" Foreground="{DynamicResource Brush.Accent}"/>
                energy drinks in order to make it.
            </TextBlock>
        </Grid>


        <Grid Margin="15" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="36"/>
                <RowDefinition Height="36"/>
            </Grid.RowDefinitions>
            <Border Style="{DynamicResource Border.Card}" Grid.RowSpan="4" Grid.ColumnSpan="3" Margin="-10"/>
            <TextBlock Style="{DynamicResource TextBlock.Main}" Grid.ColumnSpan="2" Text="encryption" TextAlignment="Left" FontSize="16"/>
            <res:InfoCircle HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="2" Margin="5,-5,-5,0" Text="these are the encryption parameters that are used to derive the cryptographic key, do not change these unless you know what you are doing"/>

            <Border Style="{DynamicResource Border.Divider.Horizontal}" Grid.Row="1" Margin="-5,2,-5,5" Grid.ColumnSpan="3"/>
            <TextBlock Grid.Row="2" Text="iterations" Style="{DynamicResource TextBlock.Main}" ToolTip="iteration count, default value of 2,500,000" TextAlignment="Right" VerticalAlignment="Center"/>
            <TextBlock Grid.Row="3" Text="salt size" Style="{DynamicResource TextBlock.Main}" ToolTip="salt size, default value of 10,240" TextAlignment="Right" VerticalAlignment="Center"/>
            <res:TextboxHint Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Width="110" Margin="3,0"  Hint="2,500,000" Text="{Binding Iterations}" Error="{Binding IterationsError}"/>
            <res:TextboxHint Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Width="110" Margin="3,0"  Hint="10,240" Text="{Binding SaltSize}" Error="{Binding SaltSizeError}"/>
        </Grid>

        <Grid Margin="15" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right">
            <Grid.RenderTransform>
                <TranslateTransform Y="-110"/>
            </Grid.RenderTransform>
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TranslateTransform.Y)" To="0" Duration="0:0:0.25" DecelerationRatio="0.2" BeginTime="0:0:0.25"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Style="{DynamicResource Border.Card}" Grid.RowSpan="3" Grid.ColumnSpan="2" Margin="-10"/>
            <TextBlock Style="{DynamicResource TextBlock.Main}" Text="general" TextAlignment="Left" FontSize="16" Grid.ColumnSpan="2"/>

            <Border Style="{DynamicResource Border.Divider.Horizontal}" Grid.Row="1" Margin="-5,2,-5,5" Grid.ColumnSpan="2"/>
            <CheckBox Style="{DynamicResource CheckBox.Main}" IsChecked="{Binding ShowEntryList}" Grid.Row="2" Content="show entry list on startup" FontSize="14"/>
            <res:InfoCircle Grid.Row="2" Grid.Column="1" Margin="5,0,0,0" Height="15" Width="15" Text="select this if you want the entry list to show up at the start instead of the dashboard, this will be ignored if you have unseen warnings in your activity log"/>
        </Grid>

        <Grid Grid.ColumnSpan="3" Grid.Row="4" Margin="0,10,0,0">
            <Grid.RenderTransform>
                <TranslateTransform Y="160"/>
            </Grid.RenderTransform>
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TranslateTransform.Y)" To="0" Duration="0:0:0.25" DecelerationRatio="0.2" BeginTime="0:0:0.45"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Style="{DynamicResource Button.Base}" Content="restore defaults" Command="{Binding RestoreDefaultsCommand}"/>
            <Button Style="{DynamicResource Button.Base}" Grid.Column="2" Content="cancel" Command="{Binding CancelCommand}"/>
            <Button Grid.Column="3" Content="save" Command="{Binding SaveCommand}" ToolTipService.ShowOnDisabled="true">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Button.Primary}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasChangedSettings}" Value="false">
                                <Setter Property="ToolTip" Value="no changes to save"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Grid>
</UserControl>
