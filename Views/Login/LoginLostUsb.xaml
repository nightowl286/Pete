<UserControl x:Class="Pete.Views.Login.LoginLostUsb"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"             
             xmlns:local="clr-namespace:Pete"
             xmlns:res="clr-namespace:Pete.Resources"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
        <Border Margin="15" Style="{DynamicResource Border.Card}"/>
        <Grid Margin="45,30">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding StatusText}" MaxWidth="275" Margin="-10,0,-10,10">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlock.Main}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HadError}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource Brush.Red}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <local:TextboxHint Grid.Row="1" TabIndex="0" Width="250" Hint="device id..." Text="{Binding DeviceID, UpdateSourceTrigger=PropertyChanged}" Error="{Binding IDError}"/>
            <local:TextboxHint Grid.Row="3" TabIndex="1" Width="250" Hint="device hash..." Text="{Binding DeviceHash, UpdateSourceTrigger=PropertyChanged}" Error="{Binding HashError}"/>

            <TextBlock Grid.Row="4" HorizontalAlignment="Left" Margin="-10,0,0,0" Style="{DynamicResource TextBlock.Base}" Text="AND" VerticalAlignment="Center"/>
            <Border Style="{DynamicResource Border.Divider.Horizontal}" Grid.Row="4" Margin="25,10,-10,10"/>
            
            
            <TextBlock Grid.Row="5" Text="{Binding UsbStatusText}" MaxWidth="250" Margin="0,0,0,10">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlock.Main}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UsbHadError}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource Brush.Red}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UsbValid}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource Brush.Green}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Grid Grid.Row="6" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="25"/>
                </Grid.ColumnDefinitions>
                <Border Width="10" Height="10" CornerRadius="15">
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="{DynamicResource Brush.Red}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding UsbDetected}" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource Brush.Green}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <TextBlock Grid.Column="1" Margin="10,0" FontFamily="{DynamicResource Font.Assets}" Foreground="{DynamicResource Brush.Text}" FontSize="24">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{DynamicResource Text.Usb}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding UsbDetected}" Value="True">
                                    <Setter Property="Text" Value="{DynamicResource Text.Usb.Connect}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <res:Spinner Grid.Column="2" Margin="5">
                    <res:Spinner.Style>
                        <Style TargetType="{x:Type res:Spinner}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding UsbDetected}" Value="True"/>
                                        <Condition Binding="{Binding UsbValid}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </res:Spinner.Style>
                </res:Spinner>
            </Grid>

            <Grid Grid.Row="7" Margin="0,15,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Style="{DynamicResource Button.Base}" TabIndex="3" Command="{Binding GoBackCommand}" Content="go back" IsCancel="True" Margin="10,0"/>
                <Button Style="{DynamicResource Button.Primary}" TabIndex="2" Grid.Column="1" Content="continue" Command="{Binding ContinueCommand}" Margin="10,0"/>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
