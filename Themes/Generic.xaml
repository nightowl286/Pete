<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:res="clr-namespace:Pete"
                    xmlns:conv="clr-namespace:Pete.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <conv:BooleanInverter x:Key="blInv"/>

    <Style TargetType="{x:Type res:TextboxHint}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="CaretBrush" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="Background" Value="{DynamicResource Brush.Background.Tint(5)}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Background.Tint(3.88)}"/>
        <Setter Property="HintForeground" Value="{DynamicResource Brush.Text.Shade(50)}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsReadOnlyCaretVisible" Value="False"/>
        <Setter Property="IsTabStop" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsReadOnly, Converter={StaticResource blInv}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type res:TextboxHint}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Border Name="Border" Effect="{DynamicResource SmallShadow}" Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <TextBlock Foreground="{TemplateBinding HintForeground}" Text="{TemplateBinding Hint}" Visibility="{TemplateBinding HintVisibility}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Padding="7,0"/>
                        <ScrollViewer VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0" Foreground="{TemplateBinding Foreground}" VerticalScrollBarVisibility="Disabled" x:Name="PART_ContentHost" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Shade(25)}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="IBeam"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Accent.Tint(20)}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Accent}"/>
            </Trigger>
            <Trigger Property="HasError" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Red.Shade(25)}"/>
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Error}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="HasError" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Red.Tint(10)}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasError" Value="True"/>
                    <Condition Property="IsFocused" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Red}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type res:TextboxMasked}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="CaretBrush" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="Background" Value="{DynamicResource Brush.Background.Tint(5)}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Background.Tint(5)}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Background.Tint(3.88)}"/>
        <Setter Property="HintForeground" Value="{DynamicResource Brush.Text.Shade(50)}"/>
        <Setter Property="IsReadOnlyCaretVisible" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsReadOnly, Converter={StaticResource blInv}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type res:TextboxMasked}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Border Name="Border" Effect="{DynamicResource SmallShadow}" Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <TextBlock FontFamily="Segoe UI" Foreground="{TemplateBinding HintForeground}" Text="{TemplateBinding Hint}" Visibility="{TemplateBinding HintVisibility}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Padding="7,0"/>
                        <ScrollViewer VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0" Foreground="{TemplateBinding Foreground}" VerticalScrollBarVisibility="Disabled" x:Name="PART_ContentHost"/>
                        <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding MaskText}" Margin="5,0" Foreground="{DynamicResource Brush.Text}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Shade(25)}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="IBeam"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Accent.Tint(20)}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Accent}"/>
            </Trigger>
            <Trigger Property="HasError" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Red.Shade(25)}"/>
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Error}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="HasError" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Red.Tint(10)}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasError" Value="True"/>
                    <Condition Property="IsFocused" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Red}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type res:InfoCircle}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Background" Value="{DynamicResource Brush.Background.Tint(8.2)}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Shade(25)}"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
        <Setter Property="ToolTipService.ShowDuration" Value="{x:Static sys:Int32.MaxValue}"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource Focus.Small}"/>
        <Setter Property="Cursor" Value="Help"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type res:InfoCircle}">
                    <Viewbox Focusable="False" StretchDirection="Both" Stretch="Uniform">
                        <Grid Width="15" Height="15" x:Name="grd" ToolTipService.ShowDuration="{x:Static sys:Int32.MaxValue}" ToolTipService.InitialShowDelay="0">
                            <Grid.ToolTip>
                                <ToolTip PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Name="PART_ToolTip" Placement="Bottom" VerticalOffset="3">
                                    <TextBlock MaxWidth="{TemplateBinding MaxTextWidth}" TextWrapping="Wrap" Text="{TemplateBinding Text}"/>
                                </ToolTip>
                            </Grid.ToolTip>
                            <Path Fill="{TemplateBinding Background}" Data="M 7.5,0 A 1,1 0 0 1 7.5,15 A 1,1 0 0 1 7.5,0"/>
                            <Path Stroke="{TemplateBinding Foreground}" Width="10" Height="10" Data="M 3,3.25 a 1,1 0 0 1 4,0 c 0,1.5 -2 1.8 -2.0,3.3 m 0,2.6 v0" 
                              StrokeLineJoin="Round" StrokeThickness="1.5" StrokeStartLineCap="Round" StrokeEndLineCap="Round"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Background.Tint(12.5)}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>